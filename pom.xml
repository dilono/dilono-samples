<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>com.dilono</groupId>
    <artifactId>dilono-suite</artifactId>
    <version>2022.02</version>

    <name>dilono-suite</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <docs.version>/preview</docs.version>
        <generatedDocsDirectory>${project.build.directory}/site</generatedDocsDirectory>
        <versions.spring.boot>2.6.2</versions.spring.boot>
        <versions.asciidoctor.maven.plugin>2.2.1</versions.asciidoctor.maven.plugin>
        <versions.dilono-edifact>2.2.55</versions.dilono-edifact>
        <versions.camel>3.14.1</versions.camel>
        <versions.asciidoctorj>2.5.2</versions.asciidoctorj>
        <versions.jruby>9.2.17.0</versions.jruby>
        <versions.azure.functions.java.library>1.4.2</versions.azure.functions.java.library>
        <versions.azure.functions.maven.plugin>1.15.0</versions.azure.functions.maven.plugin>
    </properties>

    <!-- tag::maven-repositories[] -->
    <repositories>
        <repository>
            <id>dilono-maven-public</id>
            <url>https://maven.dilono.com/releases</url>
        </repository>
    </repositories>
    <!-- end::maven-repositories[] -->

    <modules>
        <module>dilono-basic-sample</module>
        <module>dilono-camel-sftp-sample</module>
        <module>dilono-azure-functions</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dilono</groupId>
                <artifactId>dilono-basic-sample</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${versions.spring.boot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-bom</artifactId>
                <version>${versions.camel}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.microsoft.azure.functions</groupId>
                <artifactId>azure-functions-java-library</artifactId>
                <version>${versions.azure.functions.java.library}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
                <version>1.18.22</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>fake-sftp-server-lambda</artifactId>
                <version>2.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>4.1.1</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.dilono</groupId>
                <artifactId>dilono-edifact-test</artifactId>
                <version>${versions.dilono-edifact}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>com.microsoft.azure</groupId>
                    <artifactId>azure-functions-maven-plugin</artifactId>
                    <version>${versions.azure.functions.maven.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
